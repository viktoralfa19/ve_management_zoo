// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZooService;

namespace ZooService.Migrations
{
    [DbContext(typeof(ZooContext))]
    [Migration("20210119032039__ZooMigration001")]
    partial class _ZooMigration001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ZooService.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("integer")
                        .HasComment("Primary key animal table")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("character varying(16)")
                        .HasComment("Code for the animal register.")
                        .HasMaxLength(16);

                    b.Property<DateTime>("DateAdmission")
                        .HasColumnName("DateAdmission")
                        .HasColumnType("timestamp")
                        .HasComment("Date for the register was entered the zoo.");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("DateCreated")
                        .HasColumnType("timestamp")
                        .HasComment("Date for the register was created in database.");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnName("DateUpdated")
                        .HasColumnType("timestamp")
                        .HasComment("Date for the register was updated in database.");

                    b.Property<short>("IdAnimalType")
                        .HasColumnName("Id_AnimalType")
                        .HasColumnType("smallint")
                        .HasComment("Foreign Key for table animal type.");

                    b.Property<short?>("IdSuscripcion")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("character varying(64)")
                        .HasComment("Code for the animal register.")
                        .HasMaxLength(64);

                    b.Property<Guid>("UserCreated")
                        .HasColumnName("UserCreated")
                        .HasColumnType("uuid")
                        .HasComment("User that to register in database.");

                    b.Property<Guid?>("UserUpdated")
                        .HasColumnName("UserUpdated")
                        .HasColumnType("uuid")
                        .HasComment("User that to update in database.");

                    b.Property<decimal>("Weight")
                        .HasColumnName("Weight")
                        .HasColumnType("numeric(8,2)")
                        .HasComment("Weight for the animal register.");

                    b.HasKey("Id");

                    b.HasIndex("IdAnimalType")
                        .HasName("ANIMAL_ANIMAL_TYPE_FK");

                    b.ToTable("Animal");

                    b.HasComment("Store data information about animals");
                });

            modelBuilder.Entity("ZooService.Models.AnimalType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("smallint")
                        .HasComment("Primary key animal type table")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("character varying(16)")
                        .HasComment("Code for the animal register.")
                        .HasMaxLength(16);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("character varying(32)")
                        .HasComment("Code for the animal register.")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("AnimalType");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Code = "LN",
                            Name = "León"
                        },
                        new
                        {
                            Id = (short)2,
                            Code = "TG",
                            Name = "Tigre"
                        },
                        new
                        {
                            Id = (short)3,
                            Code = "ELF",
                            Name = "Elefante"
                        });
                });

            modelBuilder.Entity("ZooService.Models.Animal", b =>
                {
                    b.HasOne("ZooService.Models.AnimalType", "AnimalType")
                        .WithMany("Animals")
                        .HasForeignKey("IdAnimalType")
                        .HasConstraintName("FK_ANIMAL_ANIMAL_TYPE")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
